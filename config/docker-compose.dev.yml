services:
  customer_manager:
    container_name: "customer_manager"
    build:
      context: ..
      dockerfile: config/Dockerfile.dev
    image: "customer_manager:${APP_VERSION}"
    env_file:
      - .env
    ports:
      - "${CUSTOMER_MANAGER_WEB_SERVER_PORT}:${WEB_SERVER_PORT}"
      - "${CUSTOMER_MANAGER_DELVE_PORT}:${DELVE_PORT}"
    volumes:
      - type: bind
        source: ..
        target: /app
      - /var/run/docker.sock:/var/run/docker.sock
      - ./sqlite-data:/data
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    environment:
      - BUILDING_FILES=/app/projects/tech-house/customer-manager-challenge/cmd/api/main.go
      - APP_NAME=customer_manager
      - SQLITE_DB_PATH=/data/customers.db
      - SQLITE_IN_MEMORY=false
      # - SQLITE_DB_PATH=:memory:
      # - SQLITE_IN_MEMORY=true
    depends_on:
      - sqlite-persistent
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - tech-house
    command: tail -f /dev/null

  sqlite-persistent:
    image: alpine/sqlite:3.45.3
    container_name: sqlite-container
    working_dir: /data
    volumes:
      - ./sqlite-data:/data
      - ./sqlite-init:/sqlite-init
    stdin_open: true
    tty: true
    entrypoint: ["/bin/sh", "-c"]
    command: [
      "sqlite3 /data/customers.db '.read /sqlite-init/customers.sql' && sqlite3 /data/customers.db"
    ]
    healthcheck:
      test: ["CMD-SHELL", "sqlite3 /data/customers.db 'SELECT 1;'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    profiles:
      - tech-house

  sqlite-memory:
    image: alpine/sqlite:3.45.3
    container_name: sqlite-memory-container
    working_dir: /data
    volumes:
      - ./sqlite-init:/sqlite-init
    stdin_open: true
    tty: true
    entrypoint: ["/bin/sh", "-c"]
    command: [
      "sqlite3 :memory: '.read /sqlite-init/customers.sql' && sqlite3 :memory:"
    ]
    healthcheck:
      test: ["CMD-SHELL", "sqlite3 :memory: 'SELECT 1;'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    profiles:
      - tech-house

  sqlite-web:
    image: coleifer/sqlite-web
    container_name: sqlite-web-container
    ports:
      - "${SQLITE_WEB_PORT}:${SQLITE_WEB_PORT_TARGET}"
    volumes:
      - ./sqlite-data:/data
    environment:
      - SQLITE_DATABASE=/data/customers.db
    depends_on:
      - sqlite-persistent
    restart: unless-stopped
    profiles:
      - tech-house

networks:
  app-network:
    driver: bridge

volumes:
  sqlite_data:
